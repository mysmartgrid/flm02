<%+header%>

<script type="text/javascript" src="/resources/jquery-1.6.4.js"></script>
<script type="text/javascript">
	<!--//--><![CDATA[//><!--
	step = "interface";
	iface = "";
	legacy_auth = "";
	wifi_section = "";
	wifis = [];

	//replace with proper authentication
	login = function(jsonCall)
	{
		jsonRequest("/cgi-bin/luci/rpc/auth", "login", '["root", "root"]', 100, function(data) { legacy_auth = data.result[0]; jsonCall() });
	}

	jsonRequest = function(url, method, params, id, callback)
	{
		var auth = new RegExp('(?:^|; )sysauth=([^;]*)').exec(document.cookie);
		if (!auth)
			auth = legacy_auth;
			
		$.ajax({
			'type': "POST",
			'data': '{"method": "' + method + '", "params": ' + params + ', "id": ' + id + '}',
			'dataType': 'json',
			'url': url + "?auth=" + auth[1],
			'success': callback
		});
	}
	
	load_wifi = function(callback)
	{
		login(function() {
			jsonRequest("/cgi-bin/luci/rpc/sys", "wifi.iwscan", '["ath0"]', "99", function(data) { 
				var options;
				for ( var k = 0; k < data.result.length; k++ )
				{
					if ( data.result[k].ESSID != "" )
					{
						options += '<option class="tmp_essid" value="' + data.result[k].ESSID + '">' + data.result[k].ESSID + '</option>';
						wifis.push(data.result[k]);
					}
				}
				if ( data.result.length > 0 )
				{
					$('#essid').prepend(options);
				}
				jsonRequest("/cgi-bin/luci/rpc/uci", "get_all", '["wireless"]', "102", function(data)
					{
						var ssid, enc, key;
						for ( tmpKey in data.result )
						{
							if (data.result[tmpKey].ssid)
							{
								ssid = data.result[tmpKey].ssid;
								enc = data.result[tmpKey].encryption;
								key = data.result[tmpKey].key;
								wifi_section = tmpKey;
							}
						}
						present = $('.tmp_essid');
						var custom = true;
						for ( var k = 0; k < present.length; k++ )
						{
							if ( present[k].value == ssid )
								custom = false;
						}
						if ( custom )
						{
							$('#essid').val('');
							$('#essid-input-div').show();
							$('#essid-input').val(ssid);
						} else {
							$('#essid').val(ssid);
							$('#essid-input-div').hide();
						}
						$('#wifi-enc-input').val(enc);
						$('#wifi-key-input').val(key);
						if ( callback )
							callback();
					}
				);
			});
		});
	}

	load_network = function(callback)
	{
		jsonRequest("/cgi-bin/luci/rpc/uci", "get_all", '["network", "wan"]', "103", function(data)
			{
				alert(data.result.proto);
				if ( data.result.proto == "dhcp" )
				{
					$('#dhcp').prop('checked', true);
					$('#cbi-network-wan-ipaddr').hide();
					$('#cbi-network-wan-netmask').hide();
					$('#cbi-network-wan-gateway').hide();
					$('#cbi-network-wan-dns').hide();
				}
				else
				{
					$('#dhcp').prop('checked', false);
					$('#cbi-network-wan-ipaddr').show();
					$('#cbi-network-wan-netmask').show();
					$('#cbi-network-wan-gateway').show();
					$('#cbi-network-wan-dns').show();
				}
				if ( callback )
					callback();
			}
		);
	}

	select_enc = function(essid)
	{
		for (var k = 0; k < wifis.length; k++)
		{
			if (wifis[k].ESSID == essid)
			{
				if(wifis[k]['Encryption key'] != 'on')
					return 'none';
				else if (wifis[k]['IE'] == 'WPA Version 1')
					return 'psk';
				else if (wifis[k]['IE'] == 'IEEE 802.11i/WPA2 Version 1')
					return 'psk2';
				else
					return 'wep';
			}
		}
	}

	save_wifi = function(callback)
	{
		var ssid, enc, key;
		if ( $('#essid').val() == '' )
			ssid = $('#essid-input').val();
		else
			ssid = $('#essid').val();

		if ( $('#autoenc').prop('checked') == true )
			enc = select_enc(ssid);
		else
			enc = $('#wifi-enc-select').val();

		if ( enc == "none" )
			key = "";
		else
			key = $('#wifi-key-input').val();

		jsonRequest("/cgi-bin/luci/rpc/uci", "tset", '["wireless", ' + JSON.stringify(wifi_section) + ', ' + JSON.stringify({"ssid": ssid , "encryption": enc, "key": key}) + ']', "104", function(data) {
			jsonRequest("/cgi-bin/luci/rpc/uci", "commit", '["wireless"]', "105", function(data) {
				callback();
			});
		});
	}

	save_network = function()
	{
		var section, config;
		if ( iface == "wifi" )
			section = "wan";
		else
			section = "lan";

		if ( $('#dhcp').prop('checked') == true )
			config = {'proto': 'dhcp'};
		else
		{
			config = {'proto': 'static', 'ipaddr': $('#network-ipaddr').val(), 'netmask': $('#network-netmask').val(), 'gateway': $('#network-gateway').val(), 'dns': $('#network-dns').val()};
		}

		jsonRequest("/cgi-bin/luci/rpc/uci", "tset", '["network", ' + JSON.stringify(section) + ', ' + JSON.stringify(config) + ']', "106", function(data) {
			jsonRequest("/cgi-bin/luci/rpc/uci", "commit", '["network"]', "107", function(data) {
				callback();
			});
		});
	}

	submit = function()
	{
		if ( step == "interface" )
		{
			if ( $('#msg_wizard_interface').val() == "wlan" )
			{
				load_wifi();
				step = "wifi";
				iface = "wifi";
				$("#cbi-msg_wizard").hide(20, function() { $("#cbi-msg_wifi").show(); } );
			} else {
				load_network();
				iface = "lan";
				step = "network";
				$("#cbi-msg_wizard").hide(20, function() { $("#cbi-network").show(); } );
			}
		}
		else if ( step == "wifi" )
		{
			save_wifi();
			load_network();
			step = "network";
			$("#cbi-msg_wifi").hide(20, function() { $("#cbi-network").show(); } );
		}
		else if ( step == "network" )
		{
			save_network();
			alert("Wizard finised");
			jsonRequest("/cgi-bin/luci/rpc/uci", "apply", '["network", "wireless"]', "108", function(data) {});
		}
	}

	wizard_reset = function()
	{
		if ( step == "wifi" )
		{
			$("#cbi-msg_wifi").hide(20, function() { $("#msg_wizard").show(); } );
		}
		else if ( step == "network" )
		{
			$("#cbi-network").hide(20, function() { $("#msg_wizard").show(); } );
		}
		step = "interface";
		$('.tmp_essid').detach();
	}
	
	toggle_dhcp = function()
	{
		if ( $('#dhcp').prop('checked') )
		{
			$('#cbi-network-wan-ipaddr').hide();
			$('#cbi-network-wan-netmask').hide();
			$('#cbi-network-wan-gateway').hide();
			$('#cbi-network-wan-dns').hide();
		}
		else
		{
			$('#cbi-network-wan-ipaddr').show();
			$('#cbi-network-wan-netmask').show();
			$('#cbi-network-wan-gateway').show();
			$('#cbi-network-wan-dns').show();
		}
	}
	
	//--><!]]> 
</script>

<form method="get" action="javascript: submit()" onreset="wizard_reset()">
	<div>
		<noscript>
			<div class="errorbox">
				<strong>Java Script required!</strong>
				<br/>
				You must enable Java Script in your Browser for this wizard to work properly!
			</div>
		</noscript>
	</div>

	<div class="cbi-map" id="msg_wizard">
		<h2><a id="content" name="content"></a></h2>
		<div class="cbi-map-descr"></div>
		<fieldset class="cbi-section">
			<div class="cbi-section-node" id="msg_wizard-0x4e1e60">
				<div class="cbi-value" id="msg_wizard-1-interface">
					<label class="cbi-value-title" for="msg_wizard_interface">Interface</label>
					<div class="cbi-value-field">
						<select class="cbi-input-select" id="msg_wizard_interface" name="msg_wizard_interface" size="1">
							<option id="msg_wizard-1-interface-wlan" value="wlan" selected="selected">WIFI</option>
							<option id="msg_wizard-1-interface-lan" value="lan">LAN</option>
						</select>
					</div>
				</div>
			</div>
		</fieldset>
	</div>

	<div class="cbi-map" id="cbi-msg_wifi" style="display: none;">
		<h2><a id="content" name="content">Wifi</a></h2>
		<div class="cbi-map-descr">Please enter the name, encryption type and key/passphrase of your wifi network.</div>
		<fieldset class="cbi-section" id="cbi-wireless-wifi-iface">
			<div class="cbi-section-descr"></div>
			<fieldset class="cbi-section-node" id="cbi-wireless-cfg03bd0e">
				<div class="cbi-value" id="cbi-wireless-cfg03bd0e-ssid">
					<label class="cbi-value-title" for="cbid.wireless.cfg03bd0e.ssid">
						Network Name (<abbr title="Extended Service Set Identifier">ESSID</abbr>)
					</label>
					<div class="cbi-value-field">
						<div>
							<select onchange="if (this.value == '') { $('#essid-input-div').show() } else { $('#essid-input-div').hide() }" id="essid" class="cbi-input-select">
								<option value="">-- custom --</option>
							</select>
						</div>
						<div style="margin-top: 0.3em;" id="essid-input-div" >
							<input type="text" class="cbi-input-text" name="essid-input" id="essid-input" value="" />
						</div>
					</div>
				</div>
				<div class="cbi-value" id="cbi-wireless-cfg03bd0e-autoencr">
					<label class="cbi-value-title" for="cbid.wireless.cfg03bd0e.autoencr">
						Auto-Encryption
					</label>
					<div class="cbi-value-field">
						<input type="checkbox" onchange="if ( this.checked ) { $('#wifi-enc').hide(); $('#wifi-key-input').removeAttr('disabled'); } else { $('#wifi-enc').show() }" class="cbi-input-checkbox" id="autoenc" name="autoenc" value="1" checked="checked" />
						<div class="cbi-value-description">
							Automatically set encryption
						</div>
					</div>
				</div>
				<div class="cbi-value" id="wifi-enc" style="display: none;" >
					<label class="cbi-value-title" for="cbid.wireless.cfg03bd0e.encryption">
						Encryption
					</label>
					<div class="cbi-value-field">
						<select onchange="if (this.value == 'none') { $('#wifi-key-input').attr('disabled', 'disabled')} else { $('#wifi-key-input').removeAttr('disabled')}" class="cbi-input-select" id="cbid.wireless.cfg03bd0e.encryption" name="cbid.wireless.cfg03bd0e.encryption" size="1">
							<option id="cbi-wireless-cfg03bd0e-encryption-none" value="none">No Encryption</option>
							<option id="cbi-wireless-cfg03bd0e-encryption-wep" value="wep" selected="selected">WEP</option>
							<option id="cbi-wireless-cfg03bd0e-encryption-psk" value="psk">WPA-PSK</option>
							<option id="cbi-wireless-cfg03bd0e-encryption-psk2" value="psk2">WPA2-PSK</option>
						</select>
					</div>
				</div>
				<div class="cbi-value" id="wifi-key">
					<label class="cbi-value-title" for="cbid.wireless.cfg03bd0e.key">
						WEP-key or WPA-passphrase
					</label>
					<div class="cbi-value-field">
						<input type="text" class="cbi-input-text" name="wifi-key-input" id="wifi-key-input" value="" />
					</div>
				</div>
			</fieldset>
			<br />
		</fieldset>
		<br />
	</div>

	<div class="cbi-map" id="cbi-network" style="display: none;">
		<h2>
			<a id="content" name="content">Network</a>
		</h2>
		<div class="cbi-map-descr">
			These default settings should work just fine for most wifi networks.
		</div>
		<fieldset class="cbi-section" id="cbi-network-wan">
			<legend>Local Network</legend>
			<div class="cbi-section-node" id="cbi-network-wan">
				<div class="cbi-value" id="cbi-network-wan-proto">
					<label class="cbi-value-title" for="cbid.network.wan.proto">
						DHCP
					</label>
					<div class="cbi-value-field">
						<input type="checkbox" class="cbi-input-checkbox" id="dhcp" name="dhcp" onchange="toggle_dhcp();" checked="checked" value="1" />
						<div class="cbi-value-description">
							Automatically set network settings
						</div>
					</div>
				</div>
			</div>
			<div class="cbi-value" id="cbi-network-wan-ipaddr" style="display: none;">
				<label class="cbi-value-title" for="cbid.network.wan.ipaddr">
					<abbr title="Internet Protocol Version 4">IPv4</abbr>-Address
				</label>
				<div class="cbi-value-field">
					<input type="text" class="cbi-input-text" name="network-ipaddr" id="network-ipaddr" value="" />
				</div>
			</div>

			<div class="cbi-value" id="cbi-network-wan-netmask" style="display: none;">
				<label class="cbi-value-title" for="cbid.network.wan.netmask">
					<abbr title="Internet Protocol Version 4">IPv4</abbr>-Netmask
				</label>
				<div class="cbi-value-field">
					<input type="text" class="cbi-input-text" name="network-netmask" id="network-netmask" value="" />
				</div>
			</div>

			<div class="cbi-value" id="cbi-network-wan-gateway" style="display: none;">
				<label class="cbi-value-title" for="cbid.network.wan.gateway">
					<abbr title="Internet Protocol Version 4">IPv4</abbr>-Gateway
				</label>
				<div class="cbi-value-field">
					<input type="text" class="cbi-input-text" name="network-gateway" id="network-gateway" value="" />
				</div>
			</div>

			<div class="cbi-value" id="cbi-network-wan-dns" style="display: none;">
				<label class="cbi-value-title" for="cbid.network.wan.dns">
					<abbr title="Domain Name System">DNS</abbr>-Server
				</label>
				<div class="cbi-value-field">
					<input type="text" class="cbi-input-text" name="network-dns" id="network-dns" value="" />
				</div>
			</div>
			<br />
		</fieldset>
	</div>

	<div>
		<input type="submit" class="cbi-button-save" value="Submit" />
		<input type="reset" class="cbi-button-reset" value="Reset" />
	</div>
</form>

<%+footer%>
