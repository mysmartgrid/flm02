--- feeds/luci/modules/luci-mod-rpc/luasrc/controller/rpc.lua
+++ feeds/luci/modules/luci-mod-rpc/luasrc/controller/rpc.lua
@@ -14,7 +14,7 @@ function index()
 	local function authenticator(validator, accs)
 		local auth = luci.http.formvalue("auth", true)
 		if auth then -- if authentication token was given
-			local sdat = (luci.util.ubus("session", "get", { ubus_rpc_session = auth }) or { }).values
+			local sdat = (luci.util.ubus("session", "get", { sid = auth }) or { }).values
 			if sdat then -- if given token is valid
 				if sdat.user and luci.util.contains(accs, sdat.user) then
 					return sdat.user, auth
@@ -42,6 +42,7 @@ function rpc_auth()
 	local sys     = require "luci.sys"
 	local ltn12   = require "luci.ltn12"
 	local util    = require "luci.util"
+	local config  = require "luci.config"
 
 	local loginstat
 
@@ -50,15 +51,15 @@ function rpc_auth()
 		local sid, token, secret
 
 		if sys.user.checkpasswd(user, pass) then
-			local sdat = util.ubus("session", "create", { timeout = luci.config.sauth.sessiontime })
+			local sdat = util.ubus("session", "create", { timeout = config.sauth.sessiontime })
 			if sdat then
-				sid = sdat.ubus_rpc_session
+				sid = sdat.sid
 				token = sys.uniqueid(16)
 				secret = sys.uniqueid(16)
 
 				http.header("Set-Cookie", "sysauth="..sid.."; path=/")
 				util.ubus("session", "set", {
-					ubus_rpc_session = sid,
+					sid = sid,
 					values = {
 						user = user,
 						token = token,
@@ -81,13 +82,13 @@ function rpc_auth()
 end
 
 function rpc_uci()
+	local http    = require "luci.http"
 	if not pcall(require, "luci.model.uci") then
-		luci.http.status(404, "Not Found")
+		http.status(404, "Not Found")
 		return nil
 	end
 	local uci     = require "luci.jsonrpcbind.uci"
 	local jsonrpc = require "luci.jsonrpc"
-	local http    = require "luci.http"
 	local ltn12   = require "luci.ltn12"
 
 	http.prepare_content("application/json")
--- package/uhttpd/files/uhttpd.init	(revision 44597)
+++ package/uhttpd/files/uhttpd.init	(working copy)
@@ -65,8 +65,16 @@
 	append_arg "$cfg" realm "-r" "${realm:-OpenWrt}"
 	append_arg "$cfg" config "-c"
 	append_arg "$cfg" cgi_prefix "-x"
-	append_arg "$cfg" lua_prefix "-l"
-	append_arg "$cfg" lua_handler "-L"
+	[ -f /usr/lib/uhttpd_lua.so ] && {
+		config_get handler "$cfg" lua_handler
+		[ -f "$handler" ] && append_arg "$cfg" lua_prefix "-l" && {
+			procd_append_param command "-L" "$handler"
+		}
+	}
+	[ -f /usr/lib/uhttpd_ubus.so ] && {
+		append_arg "$cfg" ubus_prefix "-u"
+		append_arg "$cfg" ubus_socket "-U"
+	}
 	append_arg "$cfg" script_timeout "-t"
 	append_arg "$cfg" network_timeout "-T"
 	append_arg "$cfg" tcp_keepalive "-A"
